---
import { getCollection } from 'astro:content'
import { dateRange } from '@/utils/date'
import BaseLayout from '@/layouts/BaseLayout.astro'

const collection = (await getCollection('work')).sort((a, b) => {
  if (
    typeof a.data.dateEnd !== 'string' &&
    typeof b.data.dateEnd !== 'string'
  ) {
    return (
      new Date(b.data.dateEnd).valueOf() - new Date(a.data.dateEnd).valueOf()
    )
  }

  if (
    typeof a.data.dateEnd === 'string' &&
    typeof b.data.dateEnd !== 'string'
  ) {
    return -1
  }

  if (
    typeof a.data.dateEnd !== 'string' &&
    typeof b.data.dateEnd === 'string'
  ) {
    return 1
  }

  return (
    new Date(b.data.dateStart).valueOf() - new Date(a.data.dateStart).valueOf()
  )
})

const work = await Promise.all(
  collection.map(async (item) => {
    const { Content } = await item.render()
    return { ...item, Content }
  }),
)
---

<BaseLayout
  title="Work"
  description="Where I have worked and what I have done."
>
  <div class="space-y-10 prose">
    <h1 class="text-title animate">Work Experience</h1>
    <section>
      <ul class="flex flex-col space-y-4 list-none">
        {
          work.map((entry) => (
            <li class="!pl-0 before:hidden animate">
              <div class="text-sm opacity-75">
                {dateRange(entry.data.dateStart, entry.data.dateEnd)}
              </div>
              {!entry.data.link ? (
                <div class="font-semibold text-black dark:text-white">
                  {entry.data.company}
                </div>
              ) : (
                <a
                  href={entry.data.link}
                  target="_blank"
                  class="font-semibold text-black dark:text-white"
                >
                  {entry.data.company}
                </a>
              )}
              <div class="text-sm opacity-75">{entry.data.role}</div>
              <article>
                <entry.Content />
              </article>
            </li>
          ))
        }
      </ul>
    </section>
  </div>
</BaseLayout>
